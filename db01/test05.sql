/* 주제: DB 모델링 */

1. 모델링
=> 생각하는 바를 글과 그림으로 표현하는 것.
=> 생각을 쉽게 공유하고 이해할 수 있다.(그림 중심)


2. 렌더링
=> 명령어를 분석하여 화면에 그리는 것.
예) HTML 렌더러(Renderer): HTML을 분석하여 웹브라우저 화면에 출력하는 것. 


3. DB 모델링
=> 데이터의 구조를 글과 그림으로 표현
=> 데이터 사이의 관계를 쉽게 파악(이해)할 수 있다.
=> 데이터의 중복을 제거하기 위함.
=> 데이터 중복의 문제점
   1) 데이터 동기화가 어렵다.
      => 데이터를 변경했을 때 그 변경 사항을 빠뜨리기 쉽다.
      => 업무에 영향을 미친다.
      => 예) 주소 변경, 전화번호 변경
   2) 메모리 낭비
   

4. DB 모델링 절차
[논리 모델링]
=> 특정 DBMS를 고려하지 않고 논리적으로 데이터 구조를 설계한다.

1) 엔티티 식별
  => 데이터를 식별하여 그룹으로 묶는다.
  => 보통 'table'이라 부른다.
2) 엔티티에 속성을 선언한다.
  => 보통 'column'이라 부른다.
3) 제 1정규화
  => 중복 컬럼이나 중복 데이터가 있따면 별도의 테이블로 분리한다.
  => 기존 테이블과 부모 자식 관계를 맺는다.
4) 제 2정규화
  => primary key가 두 개 이상일 때 수행한다.
  => 모든 일반 컬럼은 PK에 종속되어야 한다.
  => PK에 종속되지 않는 컬럼이 있으면 별도의 테이블로 분리한다.
  => 기존 테이블과 부모 자식 관계를 맺는다.
5) 제 3정규화
  => PK에 종속되지 않고 다른 일반 컬럼에 종속되는 컬럼이 있따면 별도의 테이블로 분리한다.
  => 기존 테이블과 부모 자식 관계를 맺는다.
6) 관계 간의 수량을 지정한다.
  => 1:0이상, 1:1이상, 1:1, 다:다
  => 다:다 관계는 반드시 1:다의 관계로 변환해야 한다.
7) unique 대상 컬럼을 지정한다.
  => 중복 불가 컬럼을 지정한다.
8) not null 대상 컬럼을 지정한다.
  => 필수 입력 컬럼과 선택 입력 컬럼을 구분한다.
9) 인덱스 대상 컬럼을 지정한다
  => 검색 조건으로 자주 사용될 수 있는 컬럼에 대해 색인표를 생성한다.
10) default 값을 지정한다.
  => 값을 생략했을 때 기본으로 설정될 값을 지정한다.
  
[물리 모델링]
=> 특정 DBMS의 특성에 따라서 논리 모델을 DBMS 최적으로 바꾼다.
1) 테이블 이름과 컬럼 이름을 DBMS의 규칙에 따라 변경한다.
2) 도메인 정의
  => 같은 종류의 컬럼을 묶어서 한 타입으로 정의한다.
3) 각 컬럼에 도메인을 적용
  => 유사한 컬럼의 타입을 일관성 있게 다룰 수 있다.
4) 포워드 엔지니어링(forward) 수행
  => 모델링 결과 ==> SQL 문으로 변환시킨다.

* 리버스 엔지니어링(reverse)
  => DBMS 테이블 정보 ==> 모델링 생성

[모델링 도구]
상용: ER-WIN
상용 및 무료: Exerd 모델링 도구(www.Exerd.com)


[Primary Key 선정]
1) Key 컬럼 식별
=> 한 개 이상의 컬럼을 사용하여 키로 만든다.
=> 예)
신청자, 전화
이메일, 전화
이메일
주소, 이메일
이름,전화,이메일,주소
이름,전화,이메일,상세주소

2) 최소키/후보키(Alternate key) 선정
=> key 목록에서 최소키를 선택한다.
=> 최소키? key 컬럼의 최소화 시킨 키.
=> 예)
이메일 <--- (이메일, 전화),(주소, 이메일),(이름,전화,이메일,주소), ...
신청자, 전화

3) 주키(Primary key) 선정
=> 최소키/후보키 중에서 DBMS 관리자가 key로 사용하기로 결정한 키
=> 예)
이메일       <--- primary key
신청자,전화      <--- unique 컬럼 
=> 주의 사항
   PK 컬럼은 다른 테이블에서 참조하는 경우 변경할 수 없다.
     => 나중에 변경 가능한 컬럼에 대해서는 PK로 선정하지 말라!

4) 만약 적절한 PK를 찾을 수 없다면,
=> 일련번호나 특정 형식으로 표현하는 코드 값을 PK로 선정한다. 


[Foreign Key 컬럼]
=> 다른 테이블의 데이터를 참조하기 위해 그 테이블의 PK 값을 저장하는 컬럼
=> 그래서 이름이 "외부키"라고 부른다.
=> 다른 테이블의 일반 컬럼 값을 저장할 수 없다.
=> 부모 자식 관계를 맺는 경우, 반드시 자식 테이블에 부모의 PK컬럼 값을 저장해야 한다.


[엔티티 관계]
=> 부모: 참조 당하는 쪽 테이블
=> 자식: 참조하는 쪽 테이블
         부모 테이블의 PK 컬럼의 값을 저장하는 외부키 컬럼을 가지고 있다.
=> 관계 수량
   1 : 1        -|-------|-
   1 : 0,1      -|------0|-
   1 : 0이상    -|------0K-
   1 : 1이상        -|-------K-
   0,1 : 0이상    -|0-----0K-
   0,1 : 1이상      -|0------K-
   => 관계의 수량을 표현할 때는 반대편 테이블 쪽에 표현한다.

   
[다 대 다 관계]
=> DBMS에서는 다대다 관계를 표현할 수 없다.
=> 관계 정보를 담는 테이블을 생성한다. "관계테이블"이라 부른다.
   기존 테이블과 관계 테이블 사이에 1:다의 관계를 맺는다.








